<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>RISCOSSPlatformLayerManagerCode</web>
  <name>EntitiesLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1430839815000</creationDate>
  <parent>RISCOSSPlatformLayerManagerCode.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1442971971000</date>
  <contentUpdateDate>1442971971000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{include document="RISCOSSPlatformCode.githubProjectMacros" /}}

{{velocity wiki="false"}}
## -*- Mode:Velocity
## Output fields:
##   entity
##   layer
## Filterable fields:
##   entity
##   layer
## Orderable fields:
##   entity
##   layer

#set($offset = $mathtool.toInteger($request.get('offset')))
## offset starts from 0 in velocity and 1 in javascript
#set($offset = $offset - 1)
#if (!$offset || $offset &lt; 0)##&gt;## syntax highligher bug
  #set($offset = 0)
#end
#set($limit = $mathtool.toInteger($request.get('limit')))
#if (!$limit)
  #set ($limit = 15)
#end

## Add filter clauses
#if($request.entity)
  #set($filter = " AND doc.title like :entityFilter")
#end

#if($request.layer)
  #set($filter = "$!{filter} AND entity.layer = :layerFilter")
#end

#if($request.creator)
  #set($filter = "$!{filter} AND doc.creator = :creatorFilter")
#end

## Add order by clauses
#if($request.sort == "entity")
  #set($orderBy = "ORDER BY doc.title")
#elseif($request.sort == "layer")
  #set($orderBy = "ORDER BY entity.layer")
#end

#if($orderBy)
  #if($request.dir == "desc")
    #set($orderBy = "${orderBy} DESC")
  #else
    #set($orderBy = "${orderBy} ASC")
  #end
#end

#if($request.collist.contains('ranking'))
   #set($isPublicPage = true)
#end

#if($isPublicPage)
   #set($filter = "$!{filter} AND entity.layer = 'RISCOSSPlatformLayers.OSSComponent'")
#end

## Build the query
#if(("$!request.layer" != "" &amp;&amp; $request.layer == "RISCOSSPlatformLayers.OSSComponent" &amp;&amp; $isGuest) || $isPublicPage)
#set($scoreOrderDir = "ASC")
#if("$!request.sort" != '' &amp;&amp; $request.sort == 'ranking' &amp;&amp; "$!request.dir" != '')
   #set($scoreOrderDir = $request.dir)
#else
   #set($scoreOrderDir = "DESC")
#end

#if ("$!orderBy" != "")
   #set($orderBy = $orderBy.replaceFirst("ORDER BY","ORDER BY session.score ${scoreOrderDir}, "))
#else
   #set($orderBy = "ORDER BY session.score ${scoreOrderDir}")
#end
#set($xwql = "SELECT DISTINCT doc.fullName, doc.title, entity.layer, session.score FROM Document doc, " +
    "doc.object(RISCOSSPlatformLayerManagerCode.EntityClass) AS entity " + 
    " , Document doc2, doc2.object(RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass) as session" +
    " WHERE " +
    " session.entity=doc.fullName and session.riskConfiguration='RISCOSSPlatformRiskConfigurations.BasicRiskConfiguration' and " +  
    " doc.fullName IN (:evaluatedOssComponents) AND doc.space like 'RISCOSSPlatformEntities%' and doc.space &lt;&gt;'RISCOSSPlatformEntities' $!{filter} $!{orderBy}")
#else
#set($xwql = "SELECT doc.fullName, doc.title, entity.layer FROM Document doc, " +
    "doc.object(RISCOSSPlatformLayerManagerCode.EntityClass) AS entity WHERE " +
    "doc.space like 'RISCOSSPlatformEntities%' and doc.space &lt;&gt;'RISCOSSPlatformEntities' $!{filter} $!{orderBy}")
#end
#set($query = $services.query.xwql($xwql))
#if($request.entity &amp;&amp; $query.bindValue("entityFilter", "%${request.entity}%"))#end
#if($request.layer &amp;&amp; $query.bindValue("layerFilter", "${request.layer}"))#end
#if($request.creator &amp;&amp; $query.bindValue("creatorFilter", "${request.creator}"))#end

#if(("$!request.layer" != "" &amp;&amp; $request.layer == "RISCOSSPlatformLayers.OSSComponent" &amp;&amp; $isGuest) || $isPublicPage)
   #set($xwql2 = "SELECT DISTINCT session.entity from Document doc, doc.object(RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass) as session")
   #set($evaluatedOssComponents = $services.query.xwql($xwql2).execute())
   #if($evaluatedOssComponentsResults.size() == 0)
     #set($evaluatedOssComponents = [''])
   #end
   #set($discard = $query.bindValue('evaluatedOssComponents',$evaluatedOssComponents))
#end

#if($isPublicPage)
   #set($results = $query.setOffset($offset).setLimit($limit).execute())
#else
   #set($results = $query.execute())
#end

## Count total results
#if($isPublicPage)
   #set($hql = "SELECT count(doc) FROM XWikiDocument doc, BaseObject obj, StringProperty as prop WHERE doc.fullName=obj.name and obj.className='RISCOSSPlatformLayerManagerCode.EntityClass' and obj.id=prop.id.id and prop.id.name='layer' and prop.value='RISCOSSPlatformLayers.OSSComponent' and doc.space like 'RISCOSSPlatformEntities%' and doc.space &lt;&gt;'RISCOSSPlatformEntities'")
#else
   #set($hql = "SELECT count(doc) FROM XWikiDocument doc, BaseObject obj WHERE doc.fullName=obj.name and obj.className='RISCOSSPlatformLayerManagerCode.EntityClass'")
#end
#set($countResult = $services.query.hql($hql).execute())

## Build the result JSON
#set($resultMap = {})
#set($discard = $resultMap.put("totalrows", $util.parseInt($countResult[0])))
#set($discard = $resultMap.put("returnedrows", $mathtool.min($results.size(), $limit)))
#set($discard = $resultMap.put("offset", $mathtool.add($offset, 1)))
#set($discard = $resultMap.put("reqNo", $util.parseInt($request.reqNo)))
#set($rows = [])
#if($isPublicPage)
   #calculateTopTenProjectsAverageScore()
#end
#foreach($result in $results)
  #set($row = {})
  #set($discard = $row.put("doc_viewable", true))
  #if(!$isPublicPage)
     #set($discard = $row.put("project", $result[1]))
  #end
  #if($isPublicPage)
     #set($entityDocRef = $result[0])
     #set($projectPageURL = $xwiki.getURL("RISCOSSPlatformCode.ProjectPage", "view", "project=${escapetool.url($entityDocRef)}"))
     #set($projectName = $result[1])
     #set($projectName = $projectName.replaceFirst('_','/'))
     ##set($projectName = $projectName.split('###')[1])
     #set($projectName = $projectName.replace('%255F','_'))
     #set($entityDoc = $xwiki.getDocument($entityDocRef))
     #set($projectAuthor = $xwiki.getDocument($entityDoc.author).name)
     #set($discard = $row.put("author",$projectAuthor))
     #set($discard = $row.put("project", "&lt;a href='$projectPageURL' class='projectLink'&gt;$projectName&lt;/a&gt;"))
     #set($entityDoc = $xwiki.getDocument($entityDocRef))
     #set($osscObj = $entityDoc.getObject("RISCOSSPlatformLayers.OSSComponent"))
     ## Get associated session
     #set($query = "from doc.object(RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass) as session where session.entity=:entityDocRef and session.riskConfiguration='RISCOSSPlatformRiskConfigurations.BasicRiskConfiguration' and doc.space like 'RISCOSSPlatformRiskAnalysisSessions%' and doc.space&lt;&gt;'RISCOSSPlatformRiskAnalysisSessions'")
     #set($riskAnlysisSessions = $services.query.xwql($query).bindValue("entityDocRef","${entityDocRef}").setLimit(1).execute())
     #if ($riskAnlysisSessions.size() &gt; 0)
         #set($analisysSessionDoc = $xwiki.getDocument($riskAnlysisSessions[0]))
         ## Calculate project score
         #getProjectScore($analisysSessionDoc)
         ## Calculate the project ranking value
         #set($projectRanking = $mathtool.div($mathtool.mul($projectScore,100),$topTenProjectsScoresAverage))
         #set($projectRanking = $mathtool.roundTo(2,$projectRanking))
         #set($projectRanking = $mathtool.toInteger($projectRanking))
         #set($mod = $mathtool.mod($projectRanking, 10))
         #if($mod &gt; 5)
            #set($projectRanking = $mathtool.add($projectRanking, $mathtool.sub(10, $mod)))
         #else
            #set($projectRanking = $mathtool.sub($projectRanking, $mod))
         #end
         #if($projectRanking &gt;= 50)
            #if($projectRanking &gt;= 100)
               #set($projectRanking = 1)
            #else
               #set($projectRanking = $mathtool.sub(100, $projectRanking))
            #end
            #set($projectRanking = "This project is in the top &lt;strong&gt;${projectRanking}%&lt;/strong&gt; of the best projects")   
         #else
            ##set($projectRanking = $mathtool.sub(100, $projectRanking))
            #set($projectRanking = "This project is in the bottom &lt;strong&gt;${projectRanking}%&lt;/strong&gt; of the best projects")  
         #end
     #end
     #set($discard = $row.put("score", "$!projectScore"))
     #set($discard = $row.put("ranking", "$!{projectRanking}"))
     #set($description = "") 
     #if($osscObj)
        #set($description = $osscObj.getProperty("description").value)
     #end
     #set($discard = $row.put("description", $!description))
  #end
  #if("$!request.getParameter('callPage')" != "")
    #set($discard = $row.put("entity_url", "$request.getParameter('callPage')$result[0]"))
  #else
    #set($discard = $row.put("entity_url", $xwiki.getURL($result[0])))
  #end
  #if($result[2])
    #set($discard = $row.put("layer", $xwiki.getDocument($result[2]).title))
    #set($discard = $row.put("layer_url", $xwiki.getURL($result[2])))
  #end
  #set($discard = $rows.add($row))
#end
#set($discard = $resultMap.put("rows", $rows))

$jsontool.serialize($resultMap)

{{/velocity}}</content>
</xwikidoc>
